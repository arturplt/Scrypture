# Scrypture: Grimoirium Vivendi - Product Requirements Document

## Overview

Scrypture transforms productivity into a codex of intentional living where every aspect of life management becomes a meaningful transformation. The app gamifies personal development through a grounded approach that makes everyday tasks feel purposeful and rewarding.

**Vision Statement**: To create the most engaging and effective life management system by combining proven productivity principles with intentional living practices, making personal growth feel like a meaningful journey of transformation.

**Core Philosophy**:
- Tasks become meaningful transformations with experience rewards
- Life areas become Core Attributes (Body, Mind, Soul, Career, Home, Skills)
- Habits amplify your personal power through consistent practice
- Achievements unlock permanent benefits and recognition
- Social features allow community formation and collaborative growth

## Core Features

### 1. Task Management System
**Purpose**: Comprehensive task creation and management with mystical theming
**Key Features**:
- Task creation with title, description, category, priority, difficulty
- Six core categories: Body, Mind, Soul, Career, Home, Skills
- Priority system (low, medium, high, critical) with visual indicators
- Difficulty rating (1-5) affecting experience point calculation
- Due dates, tags, and duration tracking
- Task completion with animations and rewards
- Task editing and detail viewing with navigation

**User Flow**: Create task → Set properties → Complete task → Receive rewards → Track progress

### 2. Core Attributes System
**Purpose**: Track character progression through Body, Mind, Soul attributes
**Key Features**:
- Three core attributes: Body (physical), Mind (intellectual), Soul (spiritual)
- Experience point calculation with level thresholds
- Leveling system (1-10) with celebrations
- Visual progress bars and indicators
- Stat rewards from completed tasks
- Level-up celebrations with animations

**User Flow**: Complete tasks → Gain XP → Level up → See Bóbr evolve → Unlock achievements

### 3. Bóbr Companion System
**Purpose**: Mystical forest companion who guides and motivates users
**Key Features**:
- Three-stage evolution: Hatchling, Young, Mature
- Dam progress visualization representing completed work
- Context-aware motivational messages
- Task completion celebrations
- Evolution based on user level progression

**User Flow**: Meet Bóbr → Complete tasks → See dam grow → Watch Bóbr evolve → Receive guidance

### 4. Habit System
**Purpose**: Track recurring practices and build consistency
**Key Features**:
- Habit creation with frequency selection (daily, weekly, monthly)
- Daily habit tracking with completion validation
- Streak counting and best streak recording
- Habit completion interface with cooldown system
- Integration with task system for unified experience

**User Flow**: Create habit → Track daily completion → Build streaks → Maintain consistency

### 5. Achievement System
**Purpose**: Reward milestones and provide long-term motivation
**Key Features**:
- 15 achievements across 5 categories with rarity levels
- Automatic progress tracking and unlock conditions
- Achievement display with filtering and progress bars
- Unlock celebrations with rarity-based effects
- Statistics tracking and auto-save integration

**User Flow**: Complete milestones → Unlock achievements → See celebrations → Track progress

### 6. Onboarding & User Experience
**Purpose**: Guide new users and provide seamless experience
**Key Features**:
- Welcome screen with Ancient Bóbr introduction
- Character creation and user setup
- First task creation guide
- Tutorial completion tracking
- Analytics dashboard for progress insights

**User Flow**: Welcome → Create character → First task → Learn system → Begin journey

## User Experience

### Target Audience
**Primary Users**:
- Productivity enthusiasts who love gamification
- Intentional living practitioners
- Personal development seekers
- Creative professionals who appreciate aesthetic experiences

**User Personas**:
1. **The Beginner**: New to productivity apps, needs simple guidance
2. **The Practitioner**: Experienced, wants advanced features and optimization
3. **The Master**: Power user, wants social features and analytics

### Key User Flows
1. **First-Time User**: Onboarding → Create First Task → Complete Task → See Progress
2. **Daily User**: Open App → Check Tasks → Complete Task → Track Progress
3. **Power User**: Create Tasks → Manage Categories → Track Habits → View Analytics

## Technical Architecture

### Technology Stack
- **Frontend**: React 18 + TypeScript + Vite
- **Styling**: CSS Modules + CSS Custom Properties
- **State Management**: React Context + Local Storage
- **Build Tool**: Vite for fast development and optimized builds
- **Testing**: Jest + React Testing Library
- **Deployment**: Vercel/Netlify for static hosting

### System Architecture
```
src/
├── components/          # React components
│   ├── ui/             # Reusable UI components
│   ├── features/       # Feature-specific components
│   └── layout/         # Layout components
├── hooks/              # Custom React hooks
├── services/           # Business logic services
├── utils/              # Utility functions
├── types/              # TypeScript type definitions
├── styles/             # CSS and styling
└── assets/             # Images, fonts, etc.
```

### Data Models
- **Task**: Complete task data with all properties and metadata
- **User**: User profile, stats, preferences, and progression
- **Habit**: Habit tracking with frequency and streak data
- **Achievement**: Achievement definitions and unlock conditions
- **Bóbr**: Companion state and evolution data

## Development Roadmap

### Phase 1: MVP Foundation (COMPLETE)
**Status**: ✅ Complete
**Features**:
- Core task system with all advanced features
- Core attributes system with progression
- Bóbr companion with evolution
- Basic habit system with streak tracking
- Achievement system with 15 achievements
- Complete onboarding and user experience
- Production deployment and testing

### Phase 2: Enhanced User Experience
**Priority**: High
**Features**:
- Advanced task filtering and search
- Task templates and quick actions
- Enhanced habit analytics and insights
- Improved achievement system with more variety
- Better mobile responsiveness and PWA features
- Performance optimizations and caching

### Phase 3: Social Features
**Priority**: Medium
**Features**:
- User profiles and sharing
- Community challenges and leaderboards
- Task and habit sharing between users
- Collaborative goal setting
- Social achievements and recognition

### Phase 4: Advanced Analytics
**Priority**: Medium
**Features**:
- Comprehensive analytics dashboard
- Progress tracking and insights
- Productivity patterns and recommendations
- Export and backup functionality
- Advanced reporting and visualization

### Phase 5: Advanced Customization
**Priority**: Low
**Features**:
- Custom themes and personalization
- Advanced achievement customization
- Flexible category management
- Custom stat tracking
- Integration with external services

## Logical Dependency Chain

### Foundation Layer (Phase 1 - COMPLETE)
1. **Core Infrastructure**: React setup, routing, state management
2. **User System**: Authentication, profiles, preferences
3. **Task System**: Creation, completion, persistence
4. **Attributes System**: Stats, XP, leveling
5. **Bóbr Companion**: Evolution, messages, celebrations
6. **Habit System**: Tracking, streaks, persistence
7. **Achievement System**: Unlocks, celebrations, persistence
8. **Onboarding**: Welcome, tutorial, user creation

### Enhancement Layer (Phase 2)
1. **Task Enhancements**: Filtering, search, templates
2. **Habit Analytics**: Insights, patterns, recommendations
3. **Achievement Expansion**: More variety, categories
4. **Mobile Optimization**: PWA, responsive design
5. **Performance**: Caching, optimization, loading

### Social Layer (Phase 3)
1. **User Profiles**: Public profiles, sharing
2. **Community Features**: Challenges, leaderboards
3. **Collaboration**: Task sharing, group goals
4. **Social Achievements**: Recognition, badges

### Analytics Layer (Phase 4)
1. **Data Collection**: Comprehensive tracking
2. **Analytics Dashboard**: Insights, patterns
3. **Reporting**: Export, backup, visualization
4. **Recommendations**: AI-powered suggestions

### Customization Layer (Phase 5)
1. **Theming**: Custom themes, personalization
2. **Flexibility**: Custom categories, stats
3. **Integrations**: External service connections
4. **Advanced Features**: Power user tools

## Risks and Mitigations

### Technical Risks
**Risk**: Performance issues with complex state management
**Mitigation**: Use React Context efficiently, implement proper memoization, optimize re-renders

**Risk**: Data loss in local storage
**Mitigation**: Implement backup/export functionality, cloud sync for critical data

**Risk**: Mobile responsiveness issues
**Mitigation**: Mobile-first design, comprehensive testing on various devices

### User Experience Risks
**Risk**: Overwhelming complexity for new users
**Mitigation**: Progressive disclosure, clear onboarding, simple defaults

**Risk**: Loss of engagement over time
**Mitigation**: Regular content updates, social features, achievement variety

**Risk**: Feature bloat and confusion
**Mitigation**: Focus on core value, user testing, iterative improvement

### Business Risks
**Risk**: Competition from established productivity apps
**Mitigation**: Unique mystical theme, focused feature set, community building

**Risk**: Difficulty in user acquisition
**Mitigation**: Clear value proposition, word-of-mouth features, social sharing

**Risk**: Monetization challenges
**Mitigation**: Freemium model, premium features, community marketplace

## Success Metrics

### User Engagement
- **Daily Active Users**: Target 70%+ retention after 30 days
- **Session Duration**: Average 10+ minutes per session
- **Feature Adoption**: 80%+ of users create tasks within first week
- **Habit Streak Maintenance**: 60%+ of users maintain 7+ day habit streaks

### Product Performance
- **Task Completion Rate**: 85%+ of created tasks completed
- **Quick Start Adoption**: 40%+ of tasks started within 3 minutes
- **Achievement Unlocks**: Average 2+ achievements per user per month
- **Category Usage**: Balanced distribution across all task categories

### Technical Metrics
- **Load Time**: <2 seconds for initial page load
- **Animation Performance**: 60fps for all transformation effects
- **Data Persistence**: 99.9%+ data integrity
- **Cross-Device Sync**: <5 second sync delay

## Appendix

### Current MVP Status
- **30 Core Features**: All implemented and tested
- **Production Deployment**: Live and accessible
- **User Testing**: Ready for feedback and iteration
- **Documentation**: Comprehensive and up-to-date

### Technical Specifications
- **Codebase**: React 18 + TypeScript + Vite
- **Styling**: CSS Modules with pixel art aesthetic
- **State Management**: React Context + Local Storage
- **Testing**: Jest + React Testing Library
- **Deployment**: Vercel/Netlify static hosting

### Design System
- **Typography**: Press Start 2P for pixel art aesthetic
- **Color Palette**: Arcane theme with mystical colors
- **UI Components**: Consistent pixel art styling
- **Animations**: Smooth transitions and celebrations
- **Accessibility**: Screen reader compatible, keyboard navigable

### Future Considerations
- **Cloud Sync**: Multi-device synchronization
- **Mobile App**: Native iOS/Android applications
- **API Integration**: Third-party service connections
- **Advanced Analytics**: Machine learning insights
- **Community Platform**: Social features and collaboration 